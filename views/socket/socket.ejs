<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Document</title>
    <%-include("../link.ejs")%>
    <link rel="stylesheet" href="/static/css/socket/socket.css" />
  </head>
  <body>
    <div class="scene flex">
      <section id="chatbox">
        <div class="headerbox">
          <a href="/">
            <img
              src="/static/img/logo.png"
              alt=""
              class="logo"
              class="d-inline-block align-text-top"
            />
          </a>
          <button class="chat__custom back-btn" onclick="back()">
            <span class="material-symbols-outlined"> keyboard_backspace </span>
          </button>
        </div>
        <ul id="messages"></ul>
        <form id="form" action="">
          <input id="input" autocomplete="off" />
          <button class="chat__custom">
            <span class="material-symbols-outlined"> send </span>
          </button>
        </form>
      </section>
    </div>
    <script src="/socket.io/socket.io.js"></script>
    <script>
      let socket = io.connect();
      let messages = document.getElementById("messages");
      let form = document.getElementById("form");
      let input = document.getElementById("input");
      let select = document.getElementById("select");

      socket.on("notice", (msg) => {
        let item = document.createElement("li");
        let span = document.createElement("span");
        span.classList.add("msg");
        span.classList.add("chat__custom");
        span.textContent = msg;
        item.classList.add("notice");
        item.append(span);
        messages.appendChild(item);
      });

      form.addEventListener("submit", function (e) {
        e.preventDefault();
        if (!input.value) return;

        let item = document.createElement("li");
        let span = document.createElement("span");
        item.classList.add("mymsg");
        span.classList.add("msg");
        span.classList.add("chat__custom");
        if (select.value === "all") {
          span.classList.add("all");
          span.textContent = `${name} : ${input.value}`;
        } else {
          span.classList.add("to");
          span.textContent = `(속닥 속닥)${name} : ${input.value}`;
        }
        item.append(span);
        messages.appendChild(item);
        messages.scrollTo(0, messages.scrollHeight);
        socket.emit("chat message", { id: select.value, msg: input.value });
        input.value = "";
      });

      socket.on("chat message", function (data) {
        let item = document.createElement("li");
        let span = document.createElement("span");
        span.classList.add("chat__custom");
        span.classList.add("msg");
        if (data.type === "all") {
          span.textContent = `${data.id} : ${data.msg}`;
          span.classList.add("all");
        } else {
          span.textContent = `(속닥 속닥)${data.id} : ${data.msg}`;
          span.classList.add("to");
        }
        item.append(span);
        messages.appendChild(item);
        messages.scrollTo(0, messages.scrollHeight);
      });

      socket.on("users", (data) => {
        select.innerHTML = "";
        for (let key in data) {
          if (key != socket.id) {
            const option = document.createElement("option");
            option.value = key;
            option.innerText = data[key];
            select.append(option);
          }
        }
      });

      function back() {
        location.href = "/roomlist";
      }
    </script>
  </body>
</html>
